akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-config-on-start = on
  actor {
    # provider=remote is possible, but prefer cluster
    provider = cluster
  }
  remote {
    artery {
      transport = tcp # See Selecting a transport below
      canonical.hostname = "127.0.0.1"
      canonical.port = ${?PORT}
    }
    use-unsafe-remote-features-outside-cluster = on
  }
  cluster {
      seed-nodes = [${?SEED}]
  }
}

akka.cluster.singleton {
  # The actor name of the child singleton actor.
  singleton-name = "GlobalCounter"

  role = ""

  hand-over-retry-interval = 1s

  min-number-of-hand-over-retries = 15

  use-lease = ""

  lease-retry-interval = 5s
}

akka.cluster.singleton-proxy {
  # The actor name of the singleton actor that is started by the ClusterSingletonManager
  singleton-name = ${akka.cluster.singleton.singleton-name}

  # The role of the cluster nodes where the singleton can be deployed.
  # If the role is not specified then any node will do.
  role = ""

  # Interval at which the proxy will try to resolve the singleton instance.
  singleton-identification-interval = 1s

  # If the location of the singleton is unknown the proxy will buffer this
  # number of messages and deliver them when the singleton is identified.
  # When the buffer is full old messages will be dropped when new messages are
  # sent via the proxy.
  # Use 0 to disable buffering, i.e. messages will be dropped immediately if
  # the location of the singleton is unknown.
  # Maximum allowed buffer size is 10000.
  buffer-size = 1000
}

akka {
  actor {
    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }
  }
}

akka.actor {
  serialization-bindings {
    "cluster.MySerializable" = jackson-json
  }
}
